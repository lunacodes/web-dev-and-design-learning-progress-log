{
  "scope": "source.powershell",
  "completions":
  [
    {
      "trigger": "console\tPS [console]::",
      "contents": "[console]::${1:ConsoleSetting}(${2:value})"
    },
    {
      "trigger": "do\tPS do...until",
      "contents": "do (${1:expr}) {\n  ${2:action}\n}\nuntil${7:(limit)}\n"
    },
    {
      "trigger": "for\tPS for loop",
      "contents": "for (${1:${2:\\$x = 0}; ${3:\\$x} -lt ${4:\\$y}; ${5:\\$x++}}) {\n  ${6:action}\n}\n${7:}"
    },
    {
      "trigger": "function\t PS Function",
      "contents": "function ${1:function_name} {\n    ${2:expr}\n}\n${3:}"
    },
    {
      "trigger": "get-random\t PS Get-Random",
      "contents": "get-random -min ${1:obj} -max ${2:obj}"
    },
    {
      "trigger": "New-Object\t PS New-Object",
      "contents": "New-Object ${1:Object}"
    },
    {
      "trigger": "Set-Alias\tSet-Alias",
      "trigger": "SA\tSet-Alias",
      "contents": "function ${1:Function-Name} { ${2:Command} }\nSet-Alias ${3:alias} ${1:Function-Name}\n"
    },
    {
      "trigger": "switch\tPS switch statement",
      "contents": "switch (${1:expr}) {\n  ${2:case} { ${3:statement} }\n  ${4:${5:case} { ${6:statement} \\}}\n}\n${7:}"
    },
    {
      "trigger": "until\t PS until",
      "contents": "until (${1:cond})"
    },
    {
      "trigger": "Write-Host\tPS Write-Host",
      "trigger": "WH\tPS Write-Host",
      "contents": "Write-Host ${1:-ForegroundColor ${2:White} }${3:-BackgroundColor ${4:Black} }${5:-NoNewline }${6:-Object ${7:obj} }${8:-Separator ${9:}}${10:Param ${11:}}"
    },
  ]
}
